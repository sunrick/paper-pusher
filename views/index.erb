<!DOCTYPE html>
<head>
  <title>Pusher Test</title>
  <script src="https://code.jquery.com/jquery-2.2.2.min.js"   integrity="sha256-36cp2Co+/62rEAAYHLmRCPIych47CvdM+uTBJwSzWjI="   crossorigin="anonymous"></script>
  <script src="https://js.pusher.com/3.0/pusher.min.js"></script>
  <script type="text/javascript" src="js/paper-full.min.js"></script>
  <style>
    html, body {
      margin: 0;
    }

    html, body, .canvas, canvas[resize] {
      width: 100%;
      height: 100%;
    }
  </style>
  <script>
    // Enable pusher logging - don't include this in production
    Pusher.log = function(message) {
      if (window.console && window.console.log) {
        window.console.log(message);
      }
    };

    var pusher = new Pusher('d7c31e3cf8171bab2bd2', {
      encrypted: true
    });
    var channel = pusher.subscribe('pusher-fun');

    channel.bind('data', function(data) {
      console.log(data.x)
    });



    
  </script>
</head>

<body>
  <div class="canvas">
    <canvas id="myCanvas" resize="true" keepalive="true"></canvas>
  </div>
  <script>
    $(document).ready(function(){
      $("#dog").click(function(event){
       $.ajax({ 
            type: 'POST', 
            url: '/data', 
            data: { dog: 'chicken' }, 
            dataType: 'json',
            success: function (data) { 
              console.log("hello")
            }
        });
        event.preventDefault(); // This is for preventing the default behavior of links 
      });
    });

  </script>
  <script type="text/paperscript" canvas="myCanvas">
      // Adapted from the following Processing example:
      // http://processing.org/learning/topics/follow3.html

      // The amount of points in the path:
      var points = 25;

      // The distance between the points:
      var length = 35;

      var path = new Path({
        strokeColor: '#E4141B',
        strokeWidth: 20,
        strokeCap: 'round'
      });

      var start = view.center / [10, 1];
      for (var i = 0; i < points; i++)
        path.add(start + new Point(i * length, 0));

      channel.bind('data', function(data) {
        var point = new Point(parseInt(data.x, 10), parseInt(data.y, 10));
        path.firstSegment.point = point;
        for (var i = 0; i < points - 1; i++) {
          var segment = path.segments[i];
          var nextSegment = segment.next;
          var vector = segment.point - nextSegment.point;
          vector.length = length;
          nextSegment.point = segment.point - vector;
        }
        path.smooth({ type: 'continuous' });
      });
  </script>
</body>
</html>